# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches: 
    include:
    # - master
    - formatandregister

  paths:
    exclude:
    - README.md
    - .gitignore

pr:
- master

variables:
  appDir: ClassRegistration-site



jobs:
- job: build_linux
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: node install

  # - script: |
  #     npm install -g @angular/cli
  #     npm install
  #     ng build --prod
  #   displayName: npm install and build
  #   workingDirectory: $(appDir)

  - script: npm install -g @angular/cli
    displayName: npm install
    workingDirectory: $(appDir)

  - task: Npm@1
    inputs:
      command: 'install'
      workingDir: 'ClassRegistration-site'

  - script: ng build --prod
    displayName: ng build
    workingDirectory: $(appDir)


  # - script: ng test
  #     --browsers ChromeHeadless
  #     --no-watch
  #     --code-coverage
  #   displayName: ng test
  #   workingDirectory: $(appDir)
  


  # - script: ng e2e
  #   displayName: ng e2e
  #   workingDirectory:  $(appDir)
  #   enabled: false

  # - script: ng lint
  #   displayName: ng lint
  #   workingDirectory:  $(appDir)


  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'ar-dk-ps-sonarcloud'
      organization: '2006-jun15-net'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: '2006-jun15-net_ar-dk-ps-project2-site'
      projectName: 'ar-dk-ps-project2-site'
      cliSources: '$(appDir)/src,$(appDir)/e2e'
      extraProperties: |
        sonar.coverage.exclusions=**/*.spec.ts,$(appDir)/e2e/**/*
        sonar.javascript.lcov.reportPaths=$(appDir)/coverage/$(appDir)/lcov.info

  # - script: npm install
  #   displayName: npm install

  # - script: npm build --prod --build-optimizer
  #   displayName: npm build
  
  
  
  - task: SonarCloudAnalyze@1
    displayName: sonarcloud run analysis

  - task: SonarCloudPublish@1
    displayName: publish sonarcloud result
    inputs:
      pollingTimeoutSec: '300'


  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'Azure subscription 1(3edca897-65af-4673-84e4-b3d1c79e363a)'
      appType: 'webApp'
      WebAppName: 'ar-dk-ps-project2-site'
      packageForLinux: '$(appDir)/dist/$(appDir)'

  
  




